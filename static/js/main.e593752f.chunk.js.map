{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","target","rel","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setMovie","setQuery","loadError","setLoadError","isDataLoading","setIsDataLoading","loadMovie","currentQuery","event","a","preventDefault","data","Title","Plot","Poster","imdbID","onSubmit","toLowerCase","htmlFor","type","id","placeholder","value","onChange","classnames","disabled","onClick","App","setMovies","find","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e593752f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a\n          href={movie.imdbUrl}\n          target=\"_blank\"\n          data-cy=\"movieURL\"\n          rel=\"noreferrer\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=39c64dfe';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { FormEvent, useState } from 'react';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [loadError, setLoadError] = useState<ResponseError | null>(null);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n\n  const loadMovie = async (\n    currentQuery: string,\n    event: FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n\n    setIsDataLoading(true);\n\n    try {\n      const data = await getMovie(currentQuery);\n\n      if ('Error' in data) {\n        setLoadError(data);\n        setIsDataLoading(false);\n      } else {\n        setMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n          imdbId: data.imdbID,\n        });\n      }\n    } catch {\n      setLoadError({\n        Response: 'False',\n        Error: 'unexpected error',\n      });\n    } finally {\n      setIsDataLoading(false);\n    }\n  };\n\n  const handleSubmitForm = (event: FormEvent<HTMLFormElement>) => {\n    loadMovie(query.toLowerCase(), event);\n  };\n\n  const handleAddToList = (selectedMovie: Movie) => {\n    addMovie(selectedMovie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setLoadError(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n          {loadError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classnames(\n                'button is-light',\n                { 'is-loading': isDataLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddToList(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const foundMovie = movies.find(currentMovie => (\n      currentMovie.imdbId === movie.imdbId\n    ));\n\n    if (!foundMovie) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}